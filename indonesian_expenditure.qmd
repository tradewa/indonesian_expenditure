---
title: "Indonesian Expenditure"
format: html
---

```{r}
# Install packages if you haven't already
# install.packages(c("dagitty", "ggdag", "tidyverse"))

library(dagitty)
library(ggdag)
library(tidyverse)

# Define the DAG
dag <- dagitty("
dag {
  Education -> GDP
  Education -> Unemployment
  Urbanization -> GDP
  Urbanization -> Unemployment
  GDP -> Expenditure
  Unemployment -> Expenditure
  Inflation -> Expenditure

  Province [exposure]
  Year [exposure]
}
")

# Visualize DAG using ggdag
ggdag(dag, text = TRUE, use_labels = "name") +
  theme_minimal() +
  labs(title = "Bayesian Hierarchical Model DAG for Household Expenditure")
```
### Synthetic Date Generation
```{r}
library(tidyverse)

set.seed(123)

# Define provinces and years
provinces <- paste0("Prov", 1:10)
years <- as.factor(2017:2021)

# Generate synthetic dataset
df <- expand_grid(Province = provinces, Year = years) %>% 
  
  # Upstream confounders
  mutate(
    Education = rnorm(n(), mean = 12, sd = 2), # avg years of schooling
    Urbanization = rnorm(n(), mean = 65, sd = 15) # % urban population
  ) %>% 
  
  # Mediators
  mutate(
    GDP = 5e6 + 2e5 * Education + 3e4 * Urbanization + rnorm(n(), 0, 2e5),
    Unemployment = 7 - 0.2 * Education - 0.05 * Urbanization + 0.000001 * GDP + rnorm(n(), 0, 1)
  ) %>% 
  
  # Exogenous variable
  mutate(Inflation = rnorm(n(), mean = 2, sd = 0.5)) %>% 
  
  # Province random effect
  group_by(Province) %>% 
  mutate(ProvinceEffect = rnorm(1, 0, 0.2)) %>% 
  ungroup() %>% 
  
  # Outcome variable: log-linear model
  mutate(
    logExpenditure = 8 + 0.0000003 * GDP - 0.05 * Unemployment + 0.02 * Inflation + ProvinceEffect + rnorm(n(), 0, 0.1),
    Expenditure = exp(logExpenditure)
  )

# Preview the data
df %>% slice(1:10)
```

## Numerical Descriptive Statistics
```{r}
library(tidyverse)

# Summary statistics for all numeric variables
df %>%
  select(GDP, Unemployment, Inflation, Education, Urbanization, Expenditure) %>%
  summary()

# Grouped by Province
df %>%
  group_by(Province) %>%
  summarise(
    mean_Expenditure = mean(Expenditure),
    sd_Expenditure = sd(Expenditure),
    mean_GDP = mean(GDP),
    mean_Unemployment = mean(Unemployment),
    mean_Inflation = mean(Inflation),
    mean_Education = mean(Education),
    mean_Urbanization = mean(Urbanization)
  )
```
## Visual Descriptive Statistics
```{r}
library(ggplot2)

# Histogram of household expenditure
ggplot(df, aes(x = Expenditure)) +
  geom_histogram(bins = 20, fill = "steelblue", color = "white") +
  scale_x_continuous(labels = scales::comma) +
  labs(title = "Distribution of Household Expenditure", x = "Expenditure", y = "Count") +
  theme_minimal()

# Boxplot of Expenditure by Province
ggplot(df, aes(x = Province, y = Expenditure)) +
  geom_boxplot(fill = "lightgreen") +
  scale_y_continuous(labels = scales::comma) +
  labs(title = "Household Expenditure by Province", y = "Expenditure") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

# Scatter plot: GDP vs Expenditure
ggplot(df, aes(x = GDP, y = Expenditure)) +
  geom_point(aes(color = Province), size = 2) +
  geom_smooth(method = "lm", color = "black", se = FALSE) +
  scale_x_continuous(labels = scales::comma) +
  scale_y_continuous(labels = scales::comma) +
  labs(title = "GDP vs Household Expenditure", x = "GDP per Capita", y = "Expenditure") +
  theme_minimal()

# Scatter plot: Unemployment vs Expenditure
ggplot(df, aes(x = Unemployment, y = Expenditure)) +
  geom_point(aes(color = Province), size = 2) +
  geom_smooth(method = "lm", color = "black", se = FALSE) +
  scale_y_continuous(labels = scales::comma) +
  labs(title = "Unemployment vs Household Expenditure", x = "Unemployment Rate (%)", y = "Expenditure") +
  theme_minimal()
```

## Correlation Matrics
```{r}
library(GGally)

df %>%
  select(GDP, Unemployment, Inflation, Education, Urbanization, Expenditure) %>%
  ggpairs(title = "Correlation matrix of key variables")
```

### Model creation
```{r}
# Example formula
# - log(Expenditure) as outcome
# - GDP, Unemployment, Inflation, Education, Urbanization as predictors
# - Province as hierarchical random intercept
# - Year as fixed effect (categorical)

df_std <- df %>% 
  mutate(across(c(GDP, Unemployment, Inflation, Education, Urbanization),
                ~ scale(.) %>% as.numeric(),
                .names = "{.col}_std"))

library(brms)

formula_brm <- bf(
  log(Expenditure) ~ GDP_std + Unemployment_std + Inflation_std + Education_std + Urbanization_std + Year + (1| Province)
  )

# Priors (weakly informative)
priors <- c(
  prior(normal(0, 1), class = "b"), # coefficients
  prior(student_t(3, 0, 2), class = "Intercept"), # global intercept
  prior(exponential(1), class = "sd"), # random intercept SD
  prior(exponential(1), class = "sigma") # residual SD
)

# Fit the model
fit <- brm(
  formula = formula_brm,
  data = df_std,
  prior = priors,
  family = gaussian(),
  chains = 4, cores = 4, iter = 2000, seed = 123
)
```

```{r}
library(tidybayes)

# Posterior of coefficients
fit %>% 
  spread_draws(b_Intercept, b_GDP_std, b_Unemployment_std,
               b_Inflation_std, b_Education_std, b_Urbanization_std) %>% 
  gather(term, estimate, - .chain, - .iteration, - .draw) %>% 
  ggplot(aes(x = estimate, y = term, fill = stat(x > 0))) +
  stat_halfeye(point_interval = median_qi, .width = 0.95) +
  scale_fill_manual(values = c("red", "blue")) +
  labs(title = "Posterior distributions of coefficients",
       x = "Estimate", y = "Predictor") +
  theme_minimal()

# Posterior predictive check
pp_check(fit, type = "dens_overlay") +
  labs(title = "Posterior Predictive Check")
```

```{r}
posterior_unemp <- fit %>% 
  spread_draws(b_Unemployment_std)

# Quick summary
posterior_unemp %>% 
  mean_qi(b_Unemployment_std, .width = 0.95)

posterior_unemp %>%
  ggplot(aes(x = b_Unemployment_std)) +
  stat_halfeye(fill = "steelblue", alpha = 0.7) +
  geom_vline(xintercept = 0, linetype = "dashed", color = "red") +
  labs(title = "Posterior distribution of unemployment effect",
       x = "Effect of 1 SD increase in Unemployment on log(Expenditure)",
       y = "") +
  theme_minimal()
```

```{r}
posterior_unemp %>%
  mutate(perc_change = 100 * (exp(b_Unemployment_std) - 1)) %>%
  mean_qi(perc_change, .width = 0.95)
```


```{r}
# Conditional effects for Unemployment
# Compute conditional effects for Unemployment
cond_eff <- conditional_effects(fit, effects = "Unemployment_std") %>%
  pluck("Unemployment_std") %>%
  as_tibble() %>%
  mutate(
    estimate_Exp = exp(estimate__),
    lower_Exp = exp(lower__),
    upper_Exp = exp(upper__)
  )

# Plot with data points
ggplot() +
  # Model prediction ribbon
  geom_ribbon(data = cond_eff, 
              aes(x = effect1__, ymin = lower_Exp, ymax = upper_Exp), 
              alpha = 0.2, fill = "steelblue") +
  # Model prediction line
  geom_line(data = cond_eff, 
            aes(x = effect1__, y = estimate_Exp), 
            color = "steelblue", size = 1) +
  # Original data points
  geom_point(data = df_std, 
             aes(x = Unemployment_std, y = Expenditure), 
             color = "black", size = 1.5, alpha = 0.6) +
  labs(
    title = "Predicted Household Expenditure vs Standardized Unemployment",
    x = "Standardized Unemployment",
    y = "Expenditure"
  ) +
  theme_minimal()
```
### See whether different province has different effect of unemployment towards expenditure
```{r}
# Random intercept + random slope for Unemployment by Province
formula_brm_prov <- bf(
  log(Expenditure) ~ GDP_std + Unemployment_std + Inflation_std +
                     Education_std + Urbanization_std +
                     (1 + Unemployment_std | Province) + Year
)

fit_prov <- brm(
  formula = formula_brm_prov,
  data = df_std,
  prior = priors,  # same as before
  family = gaussian(),
  chains = 2, cores = 2, iter = 2000, seed = 123
)
```

```{r}
# Extract overall slope
overall_slope <- fixef(fit_prov) %>%
  as_tibble(rownames = "term") %>%
  filter(term == "b_Unemployment_std") %>%
  pull(Estimate)

# Rename columns for ggplot
ranef_plot <- ranef_unemp %>%
  rename(
    xmin = Q2.5.Unemployment_std,
    xmax = Q97.5.Unemployment_std,
    x = Estimate.Unemployment_std
  )

# Plot
ggplot(ranef_plot, aes(x = Province, y = x)) +
  geom_errorbar(aes(ymin = xmin, ymax = xmax), width = 0.2, color = "steelblue") +
  geom_point(size = 2, color = "steelblue") +
  geom_hline(yintercept = overall_slope, linetype = "dashed", color = "red") +
  labs(
    title = "Province-specific effect of Unemployment on log(Expenditure)",
    x = "Province",
    y = "Slope estimate (log scale)"
  ) +
  theme_minimal() +
  coord_flip()  # optional: flip axes to mimic horizontal bars
```

